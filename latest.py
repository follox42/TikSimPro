"""
Script pour publier directement la derni√®re vid√©o g√©n√©r√©e sur TikTok
sans avoir √† relancer la simulation.
"""

import os
import time
import random
from tiktok_publisher import TikTokPublisher

def get_latest_video(directory="videos"):
    """Trouve le fichier vid√©o le plus r√©cent dans le dossier sp√©cifi√©"""
    if not os.path.exists(directory):
        print(f"Le dossier {directory} n'existe pas.")
        return None
        
    # Lister tous les fichiers mp4
    video_files = [f for f in os.listdir(directory) if f.endswith('.mp4')]
    
    if not video_files:
        print(f"Aucun fichier vid√©o trouv√© dans {directory}.")
        return None
        
    # Trouver le plus r√©cent en se basant sur la date de modification
    latest_video = max(video_files, key=lambda f: os.path.getmtime(os.path.join(directory, f)))
    
    return os.path.join(directory, latest_video)

def post_latest_video():
    """Publie la derni√®re vid√©o g√©n√©r√©e sur TikTok"""
    print("="*80)
    print("PUBLICATION DE LA DERNI√àRE VID√âO SUR TIKTOK")
    print("="*80)
    
    # Trouver la derni√®re vid√©o
    video_path = get_latest_video()
    
    if not video_path:
        print("Aucune vid√©o disponible √† publier.")
        return False
        
    print(f"Derni√®re vid√©o trouv√©e: {video_path}")
    
    # Liste de hashtags populaires pour maximiser la port√©e
    hashtags = [
        "fyp", 
        "simulation", 
        "satisfying", 
        "oddlysatisfying",
        "physics",
        "viral",
        "foryou",
        "tiktoktrend",
        "ballsimulation",
        "satisfyingvideos"
    ]
    
    # Description de la vid√©o (variez-la pour chaque publication)
    captions = [
        "Simulation de balles explosives üí• Regardez jusqu'√† la fin!",
        "Quand la physique rencontre l'art üé® #simulation",
        "Satisfaisant √† regarder, non? ‚ú® Laissez un commentaire!",
        "Comment une simple simulation peut devenir si addictive üëÄ",
        "C'est tellement apaisant √† regarder üòå #oddlysatisfying",
        "La physique en action! üî¨ Vos interactions pr√©f√©r√©es?",
        "Une m√©lodie visuelle et sonore üéµ Quel rebond vous a hypnotis√©?",
        "Les couleurs, les sons, les explosions... üé® Votre partie pr√©f√©r√©e?",
        "Vid√©o musicale g√©n√©r√©e par la physique üéµ Vous aimez?",
        "Chaque rebond cr√©e une note, chaque explosion une m√©lodie üéπ"
    ]
    
    caption = random.choice(captions)
    
    # Initialiser le gestionnaire de publication TikTok
    publisher = TikTokPublisher()
    
    # Publier la vid√©o
    success = publisher.upload_video(
        video_path=video_path,
        caption=caption,
        hashtags=hashtags
    )
    
    if success:
        print("\n" + "="*80)
        print("VID√âO PUBLI√âE AVEC SUCC√àS!")
        print(f"L√©gende: {caption}")
        print(f"Hashtags: {' '.join(['#' + tag for tag in hashtags])}")
        print("="*80)
    else:
        print("\n" + "="*80)
        print("√âCHEC DE LA PUBLICATION")
        print(f"La vid√©o existe √†: {video_path}")
        print("="*80)
    
    # Fermer proprement le navigateur
    publisher.close()
    
    return success

if __name__ == "__main__":
    post_latest_video()